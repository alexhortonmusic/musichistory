{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/scripts/index.js","src/scripts/loadSongs.js","src/scripts/musicView.js"],"names":[],"mappingszBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// loads first 5 songs\nconst loadSongMod = require('./loadSongs.js');\nconst FirstSongsAJAX = loadSongMod.FirstSongsAJAX; \nlet songArr = loadSongMod.songArr;\n\nFirstSongsAJAX()\n\t\t.then(function (songData) {\n\t\t\tconsole.log(\"songData\", songData);\n\t\t\tprint5songstoDom(songData.songs);\n\t\t});\n\nconsole.log(\"songArr\", songArr);\n\n\n// list/add view module\nconst viewMod = require('./musicView.js');\n\nconst songContainer = $(\"#container\");\nconst more = $('#more');\nlet counter = 0;\n\n// populates 'Artist' dropdown\nlet artistDrop = $('#artist-drop');\nlet selectArtistArr = [\n\t'Ryan Adams',\n\t'Magnolia Sons',\n\t'Original Cast',\n\t'Lake Street Dive',\n\t'Simon & Garfunkel'\n];\n\npopulateSelectBox(selectArtistArr, artistDrop);\n\n// populates 'Album' dropdown\nlet albumDrop = $('#album-drop');\nlet selectAlbumArr = [\n\t\"Heartbreaker\",\n\t\"Bookends\",\n\t\"Hamilton\",\n\t\"Side Pony\",\n\t\"Baby, That's You\"\n];\n\npopulateSelectBox(selectAlbumArr, albumDrop);\n\n// function to populate select boxes\nfunction populateSelectBox (arr, drop) {\n\tfor (let i = 0, j = arr.length; i < j; i++) {\n\t\tdrop.append(`<option>${arr[i]}</option>`);\n\t}\n}\n\nfunction print5songstoDom (songData) {\n\tconsole.log(\"songData\", songData);\n\t$.each(songData, (key, song) => {\n\t\tcounter++;\n\t\t// adds songs to DOM\n\t\tsongContainer.append(`\n\t\t\t<div class=\"song\" id=\"song-${counter}\">\n\t\t\t\t<h2>${song.song}</h2>\n\t\t\t\t<div class=\"artist-name\">\n\t\t\t\t\t<p>${song.band}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"album-name\">\n\t\t\t\t\t<p><i>${song.album}</i></p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"song-genre\">\n\t\t\t\t\t<p>${song.genre}</p>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"delete\" id=\"btn-${counter}\">Delete</button>\n\t\t\t</div>\n\t\t`);\n\t\t$(\".delete\").click(deleteSong);\n\t});\n\tmore.append(`<a href=\"#\">More ></a>`);\n}\n\nfunction loadRemaining (songData2) {\n\tlet songs = songData2.songs;\n\tcounter = 5;\n\t$.each(songs, (key, song) => {\n\t\tsongArr.push(song);\n\t\tcounter++;\n\t\t// adds songs to DOM\n\t\tsongContainer.append(`\n\t\t\t<div class=\"song\" id=\"song-${counter}\">\n\t\t\t\t<h2>${song.song}</h2>\n\t\t\t\t<div class=\"artist-name\">\n\t\t\t\t\t<p>${song.band}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"album-name\">\n\t\t\t\t\t<p><i>${song.album}</i></p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"song-genre\">\n\t\t\t\t\t<p>${song.genre}</p>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"delete\" id=\"btn-${counter}\">Delete</button>\n\t\t\t</div>\n\t\t`);\n\t});\n\t$(\".delete\").click(deleteSong);\n}\n\n// show remaing songs in second JSON file\nmore.on('click', function () {\n\tmore.addClass('hideMore');\n\t$.ajax({\n\t\t\turl: \"src/scripts/songs2.json\"\n\t\t}).done(loadRemaining);\n});\n\n\n//------ADDING MORE SONGS------//\n\nconst listMusicView = $('#listMusicView'); // list music link\nconst addMusicView = $('#addMusicView');// add music link\n\nlistMusicView.click(function () {\n\tviewMod.goToListView();\n});\n\naddMusicView.click(function () {\n\tviewMod.goToAddView();\n});\n\n\n// inputs to get values to add to array/DOM\nlet songInput = $(\"#songInput\"),\n\t  artistInput = $(\"#artistInput\"),\n\t\talbumInput = $(\"#albumInput\"),\n\t\tgenreInput = $(\"#genreInput\"),\n\t\taddBtn = $(\"#addBtn\");\n\naddBtn.on('click', songObjToArray);\n\nfunction songObjToArray() {\n\tvar songObj = {\n\t\tsong: songInput.val(),\n\t\tband: artistInput.val(),\n\t\talbum: albumInput.val(),\n\t\tgenre: genreInput.val()\n\t};\n\tsongArr.push(songObj);\n\tcounter++;\n\tsongContainer.append(`\n\t\t\t<div class=\"song\" id=\"song-${counter}\">\n\t\t\t\t<h2>${songObj.song}</h2>\n\t\t\t\t<div class=\"artist-name\">\n\t\t\t\t\t<p>${songObj.band}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"album-name\">\n\t\t\t\t\t<p><i>${songObj.album}</i></p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"song-genre\">\n\t\t\t\t\t<p>${songObj.genre}</p>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"delete\" id=\"btn-${counter}\">Delete</button>\n\t\t\t</div>\n\t\t`);\n\tsongInput.val(\"\");\n\tartistInput.val(\"\");\n\talbumInput.val(\"\");\n\tgenreInput.val(\"\");\n\n\t// go back to list view\n\tviewMod.goToListView();\n}\n\n\n//-----Delete Button\n\nfunction deleteSong () { // this does not delete object from array yet...\n\t$(this).parent('.song').remove();\n\tlet songThing = $(this).parent('.song').song;\n\t$.each(songArr, function (i, el) {\n\t\tif (this.song === songThing) {\n\t\t\tsongArr.splice(i, 1);\n\t\t}\n\t});\n}\n\n\n\n\n","'use strict';\n\nconst songArr = [];\n\nvar FirstSongsAJAX = function() {\n\treturn new Promise((resolve, reject) => {\n\t\t$.ajax({\n\t\t\turl: \"src/scripts/songs.json\"\n\t\t}).done(function (songData) {\n\t\t\tresolve(songData);\n\t\t}).fail(function(error) {\n\t\t\treject(error);\n\t\t});\n\t});\n};\n\n// const FirstSongsPromise = function () {\n// //loads first five songs\n\t// firstSongsAJAX()\n\t// \t.then(function (songData) {\n\t// \t\tconsole.log(\"songData\", songData);\n\t// \t\tsongArr.push(songData);\n\t// \t});\n// };\n\nmodule.exports = {songArr, FirstSongsAJAX};","'use strict';\n\nconst listMusicView = $('#listMusicView'); // list music link\nconst addMusicView = $('#addMusicView');// add music link\n\nlet listView = $('#listView'); // container holding list view divs\nlet addMusic = $('#addMusic'); // div added on 'add music' click event\n\nlet goToListView = function () {\n\tlistView.removeClass('hideListView');\n\taddMusic.addClass('hideAddView');\n};\n\nlet goToAddView = function () {\n\taddMusic.removeClass('hideAddView');\n\tlistView.addClass('hideListView');\n};\n\nmodule.exports = {goToAddView, goToListView};"]}